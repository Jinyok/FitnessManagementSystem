// <auto-generated />
using System;
using FMSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FMSystem.Migrations
{
    [DbContext(typeof(fmsContext))]
    [Migration("20200610201916_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FMSystem.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CoachID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<long?>("PhoneNo")
                        .HasColumnType("bigint");

                    b.HasKey("CoachId");

                    b.ToTable("coach");
                });

            modelBuilder.Entity("FMSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("ClassHour")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("CourseId");

                    b.ToTable("course");
                });

            modelBuilder.Entity("FMSystem.Models.Instructs", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnName("CoachID")
                        .HasColumnType("int");

                    b.Property<int>("AttendedHours")
                        .HasColumnType("int");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "CoachId")
                        .HasName("PRIMARY");

                    b.HasIndex("CoachId")
                        .HasName("instruct_CoachID_idx");

                    b.ToTable("instructs");
                });

            modelBuilder.Entity("FMSystem.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<long?>("PhoneNo")
                        .HasColumnType("bigint");

                    b.HasKey("MemberId");

                    b.ToTable("member");
                });

            modelBuilder.Entity("FMSystem.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SectionID")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnName("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("SectionId");

                    b.HasIndex("CourseId")
                        .HasName("section_CourseID_idx");

                    b.ToTable("section");
                });

            modelBuilder.Entity("FMSystem.Models.User", b =>
                {
                    b.Property<string>("Userid")
                        .HasColumnName("userid")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnName("create_time")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("Userid");

                    b.ToTable("user");
                });

            modelBuilder.Entity("FMSystem.Models.Instructs", b =>
                {
                    b.HasOne("FMSystem.Models.Coach", "Coach")
                        .WithMany("Instructs")
                        .HasForeignKey("CoachId")
                        .HasConstraintName("instruct_CoachID")
                        .IsRequired();

                    b.HasOne("FMSystem.Models.Member", "Member")
                        .WithMany("Instructs")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("instruct_MemberID")
                        .IsRequired();
                });

            modelBuilder.Entity("FMSystem.Models.Section", b =>
                {
                    b.HasOne("FMSystem.Models.Course", "Course")
                        .WithMany("Section")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("section_CourseID");
                });
#pragma warning restore 612, 618
        }
    }
}
